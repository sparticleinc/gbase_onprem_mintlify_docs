{
  "openapi": "3.1.0",
  "info": {
    "title": "GPTBase",
    "description": "# Introduce\nThis API document can help you understand GPTBase more deeply. \nYou can train your own AI directly through the interface of this document.\n\n\n##  Authentication\n\nHome page: [https://gptbase.ai](https://gptbase.ai)\n\nHuggingface: [https://huggingface.co/gptbase](https://huggingface.co/gptbase)\n\nThe GPTBase API uses API keys for authentication. Visit your API Keys page to retrieve the API key you'll use in your requests.\n\nRemember that your API key is a secret! Do not share it with others or expose it in any client-side code (browsers, apps). \nProduction requests must be routed through your own backend server where your API key can be securely loaded from an environment variable or key management service.\n\nAll API requests should include your API key in an Authorization HTTP header as follows:\n\nParameter name: Authorization\n\nValue: Bearer [YOUR_API_KEY](https://admin.gptbase.ai/keys)\n\n```\nAuthorization: Bearer YOUR_API_KEY\n```\n\n## Use steps\n1.Fill in your API keys.\n\n2.You can create an AI by using either the API interface or the administrative backend. Once created, the AI will generate an ID which will be required for the subsequent steps.\n\n3.Use the generated ID to call the file upload interface.\n\n4.After uploading the file, you can use the question interface to inquire about it.\n",
    "version": "0.0.1"
  },
  "servers": [
    {
      "url": "/"
    }
  ],
  "paths": {
    "/v1/ais/{ai_id}": {
      "get": {
        "tags": [
          "GPTBase AI"
        ],
        "summary": "Get AI",
        "description": "You can get an AI Info",
        "operationId": "get_ai_v1_ais__ai_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Ai Id"
            },
            "name": "ai_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AIDetailOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "GPTBase AI"
        ],
        "summary": "Delete AI",
        "description": "You can delete an AI type you don't want through this interface.",
        "operationId": "delete_ai_v1_ais__ai_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Ai Id"
            },
            "name": "ai_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Delete Dataset",
              "default": false
            },
            "name": "delete_dataset",
            "in": "query"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "Auth0HTTPBearer": []
          },
          {
            "HTTPBearer": []
          }
        ]
      },
      "patch": {
        "tags": [
          "GPTBase AI"
        ],
        "summary": "Update AI",
        "description": "You can modify your AI type through this interface.",
        "operationId": "update_ai_v1_ais__ai_id__patch",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Ai Id"
            },
            "name": "ai_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRobotIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RobotOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/ais": {
      "get": {
        "tags": [
          "GPTBase AI"
        ],
        "summary": "Get AIs",
        "description": "You can obtain all AI types you create through this interface.",
        "operationId": "get_ais_v1_ais_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "title": "Page",
              "default": 1
            },
            "name": "page",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "title": "Size",
              "default": 50
            },
            "name": "size",
            "in": "query"
          },
          {
            "description": "Sort order, allowing order by multiple columns, separated by `,`, use `-` for reverse order.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Order By",
              "description": "Sort order, allowing order by multiple columns, separated by `,`, use `-` for reverse order."
            },
            "name": "order_by",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Page_RobotPageOut_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "Auth0HTTPBearer": []
          },
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/v1/question/references/{ai_id}": {
      "get": {
        "tags": [
          "Get references"
        ],
        "summary": "Get References",
        "operationId": "get_references_v1_question_references__ai_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Message Id"
            },
            "name": "message_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/v1/question/{ai_id}": {
      "post": {
        "tags": [
          "Question"
        ],
        "summary": "Ask Question",
        "description": "When you upload a file through the file upload interface,\nyou can use this interface to ask questions about the content of the file you upload,\nand this interface will return the retrieved answer.",
        "operationId": "ask_question_v1_question__ai_id__post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Ai Id"
            },
            "name": "ai_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QuestionIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuestionOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "Auth0HTTPBearer": []
          },
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/v1/{ai_id}/session.messages": {
      "get": {
        "tags": [
          "Question"
        ],
        "summary": "Get Session Messages",
        "operationId": "get_session_messages_v1__ai_id__session_messages_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Ai Id"
            },
            "name": "ai_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Session Id"
            },
            "name": "session_id",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "title": "End Time"
            },
            "name": "end_time",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "title": "Page",
              "default": 1
            },
            "name": "page",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "title": "Size",
              "default": 50
            },
            "name": "size",
            "in": "query"
          },
          {
            "description": "Sort order, allowing order by multiple columns, separated by `,`, use `-` for reverse order.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Order By",
              "description": "Sort order, allowing order by multiple columns, separated by `,`, use `-` for reverse order."
            },
            "name": "order_by",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Page_SessionMessageExpandOut_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Question"
        ],
        "summary": "Delete Session Messages",
        "operationId": "delete_session_messages_v1__ai_id__session_messages_delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Ai Id"
            },
            "name": "ai_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Session Id"
            },
            "name": "session_id",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "title": "Created By"
            },
            "name": "created_by",
            "in": "query"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/v1/{ai_id}/message_rating": {
      "patch": {
        "tags": [
          "Question"
        ],
        "summary": "Message Rating",
        "operationId": "message_rating_v1__ai_id__message_rating_patch",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Ai Id"
            },
            "name": "ai_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Session Id"
            },
            "name": "session_id",
            "in": "query"
          },
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Message Id"
            },
            "name": "message_id",
            "in": "query"
          },
          {
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Rating"
            },
            "name": "rating",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_message_rating_v1__ai_id__message_rating_patch"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "Auth0HTTPBearer": []
          },
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/v1/{ai_id}/session.messages/{message_id}": {
      "get": {
        "tags": [
          "Question Message"
        ],
        "summary": "Get Message",
        "operationId": "get_message_v1__ai_id__session_messages__message_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Ai Id"
            },
            "name": "ai_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Message Id"
            },
            "name": "message_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "Auth0HTTPBearer": []
          },
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/v1/faq_recommend_translation/{ai_id}": {
      "post": {
        "tags": [
          "Question"
        ],
        "summary": "Ask Recommend Translation",
        "operationId": "ask_recommend_translation_v1_faq_recommend_translation__ai_id__post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Ai Id"
            },
            "name": "ai_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecommendIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "Auth0HTTPBearer": []
          },
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/v1/datasets": {
      "get": {
        "tags": [
          "Datasets"
        ],
        "summary": "Get datasets",
        "description": "Get user's datasets",
        "operationId": "get_datasets_v1_datasets_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "title": "Page",
              "default": 1
            },
            "name": "page",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "title": "Size",
              "default": 50
            },
            "name": "size",
            "in": "query"
          },
          {
            "description": "Sort order, allowing order by multiple columns, separated by `,`, use `-` for reverse order.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Order By",
              "description": "Sort order, allowing order by multiple columns, separated by `,`, use `-` for reverse order."
            },
            "name": "order_by",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Page_DatasetCloneProgressOut_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "Auth0ImplicitBearer": []
          },
          {
            "Auth0HTTPBearer": []
          },
          {
            "HTTPBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Datasets"
        ],
        "summary": "Create dataset",
        "description": "Create dataset",
        "operationId": "create_dataset_v1_datasets_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DatasetIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatasetOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "Auth0ImplicitBearer": []
          },
          {
            "Auth0HTTPBearer": []
          },
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/v1/datasets/{dataset_id}": {
      "get": {
        "tags": [
          "Datasets"
        ],
        "summary": "Get dataset",
        "description": "Get dataset",
        "operationId": "get_dataset_v1_datasets__dataset_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatasetOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "Auth0ImplicitBearer": []
          },
          {
            "Auth0HTTPBearer": []
          },
          {
            "HTTPBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Datasets"
        ],
        "summary": "Update dataset",
        "description": "Update dataset",
        "operationId": "update_dataset_v1_datasets__dataset_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DatasetIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatasetOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "Auth0ImplicitBearer": []
          },
          {
            "Auth0HTTPBearer": []
          },
          {
            "HTTPBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Datasets"
        ],
        "summary": "Delete dataset",
        "description": "Delete dataset",
        "operationId": "delete_dataset_v1_datasets__dataset_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "Auth0ImplicitBearer": []
          },
          {
            "Auth0HTTPBearer": []
          },
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/v1/datasets/{dataset_id}/sources/counts": {
      "get": {
        "tags": [
          "Datasets"
        ],
        "summary": "Get dataset files counts",
        "description": "Get dataset files counts",
        "operationId": "get_dataset_files_counts_v1_datasets__dataset_id__sources_counts_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Dataset Files Counts V1 Datasets  Dataset Id  Sources Counts Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "Auth0ImplicitBearer": []
          },
          {
            "Auth0HTTPBearer": []
          },
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/v1/datasets/{dataset_id}/files": {
      "get": {
        "tags": [
          "Datasets"
        ],
        "summary": "Get dataset files",
        "description": "Get dataset files",
        "operationId": "get_dataset_files_v1_datasets__dataset_id__files_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/DatasourceType"
                },
                {
                  "type": "string"
                }
              ],
              "title": "File Type",
              "default": "website"
            },
            "name": "file_type",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/VectorFileStatus"
            },
            "name": "file_status",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "title": "Query"
            },
            "name": "query",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "title": "Start Time"
            },
            "name": "start_time",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "title": "End Time"
            },
            "name": "end_time",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "title": "Page",
              "default": 1
            },
            "name": "page",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "title": "Size",
              "default": 50
            },
            "name": "size",
            "in": "query"
          },
          {
            "description": "Sort order, allowing order by multiple columns, separated by `,`, use `-` for reverse order.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Order By",
              "description": "Sort order, allowing order by multiple columns, separated by `,`, use `-` for reverse order."
            },
            "name": "order_by",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Page_VectorFileOut_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "Auth0ImplicitBearer": []
          },
          {
            "Auth0HTTPBearer": []
          },
          {
            "HTTPBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Datasets"
        ],
        "summary": "Update dataset file",
        "description": "Update dataset file",
        "operationId": "update_dataset_file_v1_datasets__dataset_id__files_put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VectorFileIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VectorFileOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "Auth0ImplicitBearer": []
          },
          {
            "Auth0HTTPBearer": []
          },
          {
            "HTTPBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Datasets"
        ],
        "summary": "Add file to dataset",
        "description": "Add file to dataset",
        "operationId": "add_file_to_dataset_v1_datasets__dataset_id__files_post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_add_file_to_dataset_v1_datasets__dataset_id__files_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "Auth0ImplicitBearer": []
          },
          {
            "Auth0HTTPBearer": []
          },
          {
            "HTTPBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Datasets"
        ],
        "summary": "Delete dataset file",
        "description": "Delete dataset file",
        "operationId": "delete_dataset_file_v1_datasets__dataset_id__files_delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_delete_dataset_file_v1_datasets__dataset_id__files_delete"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "Auth0ImplicitBearer": []
          },
          {
            "Auth0HTTPBearer": []
          },
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/v1/datasets/{dataset_id}/files/refresh_list": {
      "put": {
        "tags": [
          "Datasets"
        ],
        "summary": "Refresh dataset file list",
        "operationId": "refresh_dataset_file_list_v1_datasets__dataset_id__files_refresh_list_put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_refresh_dataset_file_list_v1_datasets__dataset_id__files_refresh_list_put"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "Auth0ImplicitBearer": []
          },
          {
            "Auth0HTTPBearer": []
          },
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/v1/datasets/{dataset_id}/files/{file_id}/refresh": {
      "put": {
        "tags": [
          "Datasets"
        ],
        "summary": "Refresh dataset file",
        "operationId": "refresh_dataset_file_v1_datasets__dataset_id__files__file_id__refresh_put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "File Id"
            },
            "name": "file_id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "Auth0ImplicitBearer": []
          },
          {
            "Auth0HTTPBearer": []
          },
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/v1/datasets/{dataset_id}/upload_files/refresh_list": {
      "put": {
        "tags": [
          "Datasets"
        ],
        "summary": "Refresh dataset upload file list",
        "operationId": "refresh_dataset_upload_file_list_v1_datasets__dataset_id__upload_files_refresh_list_put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_refresh_dataset_upload_file_list_v1_datasets__dataset_id__upload_files_refresh_list_put"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "Auth0ImplicitBearer": []
          },
          {
            "Auth0HTTPBearer": []
          },
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/v1/datasets/{dataset_id}/links": {
      "post": {
        "tags": [
          "Datasets"
        ],
        "summary": "Add link to dataset",
        "operationId": "add_link_to_dataset_v1_datasets__dataset_id__links_post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/DatasourceType"
                }
              ],
              "default": "website"
            },
            "name": "links_type",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_add_link_to_dataset_v1_datasets__dataset_id__links_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "Auth0ImplicitBearer": []
          },
          {
            "Auth0HTTPBearer": []
          },
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/v1/datasets/{dataset_id}/configs": {
      "post": {
        "tags": [
          "Datasets"
        ],
        "summary": "Update Dataset Configs",
        "operationId": "update_dataset_configs_v1_datasets__dataset_id__configs_post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_update_dataset_configs_v1_datasets__dataset_id__configs_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "Auth0ImplicitBearer": []
          },
          {
            "Auth0HTTPBearer": []
          },
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/v1/datasets/{ai_id}/datasets/{dataset_id}": {
      "post": {
        "tags": [
          "Datasets"
        ],
        "summary": "Bind dataset to ai",
        "description": "Bind dataset to ai",
        "operationId": "bind_dataset_to_ai_v1_datasets__ai_id__datasets__dataset_id__post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Ai Id"
            },
            "name": "ai_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "Auth0ImplicitBearer": []
          },
          {
            "Auth0HTTPBearer": []
          },
          {
            "HTTPBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Datasets"
        ],
        "summary": "Unbind dataset to ai",
        "description": "Unbind dataset to ai",
        "operationId": "unbind_dataset_to_ai_v1_datasets__ai_id__datasets__dataset_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Ai Id"
            },
            "name": "ai_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Dataset Id"
            },
            "name": "dataset_id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "Auth0ImplicitBearer": []
          },
          {
            "Auth0HTTPBearer": []
          },
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/v1/datasets/{ai_id}/datasets": {
      "get": {
        "tags": [
          "Datasets"
        ],
        "summary": "Get ai datasets",
        "description": "Get ai datasets",
        "operationId": "get_ai_datasets_v1_datasets__ai_id__datasets_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Ai Id"
            },
            "name": "ai_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "title": "Page",
              "default": 1
            },
            "name": "page",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "title": "Size",
              "default": 50
            },
            "name": "size",
            "in": "query"
          },
          {
            "description": "Sort order, allowing order by multiple columns, separated by `,`, use `-` for reverse order.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Order By",
              "description": "Sort order, allowing order by multiple columns, separated by `,`, use `-` for reverse order."
            },
            "name": "order_by",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Page_DatasetCloneProgressOut_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "Auth0ImplicitBearer": []
          },
          {
            "Auth0HTTPBearer": []
          },
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/v1/digitals/{ai_id}/chat": {
      "post": {
        "tags": [
          "Digital Human"
        ],
        "summary": "Chat",
        "operationId": "chat_v1_digitals__ai_id__chat_post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "title": "Ai Id"
            },
            "name": "ai_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Params",
                "description": "Json body. Same with openai chat api."
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "Auth0ImplicitBearer": []
          },
          {
            "Auth0HTTPBearer": []
          },
          {
            "HTTPBearer": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "AIDetailOut": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 100,
            "title": "Name"
          },
          "discrible": {
            "type": "string",
            "title": "Discrible",
            "nullable": true
          },
          "subject_name": {
            "type": "string",
            "title": "Subject Name",
            "nullable": true
          },
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "nullable": true
          },
          "ai_type": {
            "type": "string",
            "maxLength": 20,
            "title": "Ai Type",
            "description": "DEFAULT: default\u003Cbr/\u003EDEMO: demo\u003Cbr/\u003EPUBLIC: public\u003Cbr/\u003EPRIVATE: private\u003Cbr/\u003ETRENDING: trending",
            "default": "private"
          },
          "ai_model": {
            "type": "string",
            "maxLength": 20,
            "title": "Ai Model",
            "description": "FILE: file\u003Cbr/\u003EWEBSITE: website\u003Cbr/\u003EDIGITAL_HUMAN: digital_human",
            "default": "file"
          },
          "ai_status": {
            "type": "string",
            "maxLength": 20,
            "title": "Ai Status",
            "description": "INIT: init\u003Cbr/\u003EREADY: ready\u003Cbr/\u003EFROZEN: frozen",
            "default": "ready"
          },
          "user": {
            "allOf": [
              {
                "$ref": "#/components/schemas/mygpt.models.User.leaf"
              }
            ],
            "title": "User"
          },
          "datasets": {
            "items": {
              "$ref": "#/components/schemas/mygpt.models.Dataset.leaf"
            },
            "type": "array",
            "title": "Datasets"
          },
          "questions": {
            "items": {
              "$ref": "#/components/schemas/mygpt.models.Question.leaf"
            },
            "type": "array",
            "title": "Questions"
          },
          "file_count": {
            "type": "integer",
            "title": "File Count"
          },
          "configs": {
            "type": "object",
            "title": "Configs"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "created_at",
          "name",
          "user",
          "datasets",
          "questions",
          "file_count",
          "configs"
        ],
        "title": "AIDetailOut"
      },
      "AIType": {
        "type": "string",
        "enum": [
          "default",
          "demo",
          "public",
          "private",
          "trending"
        ],
        "title": "AIType",
        "description": "An enumeration."
      },
      "Body_add_file_to_dataset_v1_datasets__dataset_id__files_post": {
        "properties": {
          "files": {
            "items": {
              "type": "string",
              "format": "binary"
            },
            "type": "array",
            "title": "Files"
          }
        },
        "type": "object",
        "required": [
          "files"
        ],
        "title": "Body_add_file_to_dataset_v1_datasets__dataset_id__files_post"
      },
      "Body_add_link_to_dataset_v1_datasets__dataset_id__links_post": {
        "properties": {
          "links": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Links"
          },
          "spa": {
            "type": "boolean",
            "title": "Spa",
            "default": false
          },
          "max_images": {
            "type": "integer",
            "title": "Max Images",
            "default": 10
          }
        },
        "type": "object",
        "required": [
          "links"
        ],
        "title": "Body_add_link_to_dataset_v1_datasets__dataset_id__links_post"
      },
      "Body_delete_dataset_file_v1_datasets__dataset_id__files_delete": {
        "properties": {
          "file_ids": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "title": "File Ids"
          }
        },
        "type": "object",
        "required": [
          "file_ids"
        ],
        "title": "Body_delete_dataset_file_v1_datasets__dataset_id__files_delete"
      },
      "Body_message_rating_v1__ai_id__message_rating_patch": {
        "properties": {
          "feedback_content": {
            "type": "string",
            "title": "Feedback Content"
          },
          "feedback_metadata": {
            "type": "object",
            "title": "Feedback Metadata",
            "default": {

            }
          }
        },
        "type": "object",
        "title": "Body_message_rating_v1__ai_id__message_rating_patch"
      },
      "Body_refresh_dataset_file_list_v1_datasets__dataset_id__files_refresh_list_put": {
        "properties": {
          "file_id_list": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "title": "File Id List"
          }
        },
        "type": "object",
        "required": [
          "file_id_list"
        ],
        "title": "Body_refresh_dataset_file_list_v1_datasets__dataset_id__files_refresh_list_put"
      },
      "Body_refresh_dataset_upload_file_list_v1_datasets__dataset_id__upload_files_refresh_list_put": {
        "properties": {
          "file_id_list": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "title": "File Id List"
          }
        },
        "type": "object",
        "required": [
          "file_id_list"
        ],
        "title": "Body_refresh_dataset_upload_file_list_v1_datasets__dataset_id__upload_files_refresh_list_put"
      },
      "Body_update_dataset_configs_v1_datasets__dataset_id__configs_post": {
        "properties": {
          "metadata": {
            "type": "object",
            "title": "Metadata"
          }
        },
        "type": "object",
        "required": [
          "metadata"
        ],
        "title": "Body_update_dataset_configs_v1_datasets__dataset_id__configs_post"
      },
      "CloneProgressOut": {
        "properties": {
          "total": {
            "type": "integer",
            "title": "Total"
          },
          "done": {
            "type": "integer",
            "title": "Done"
          },
          "remaining": {
            "type": "integer",
            "title": "Remaining"
          }
        },
        "type": "object",
        "required": [
          "total",
          "done",
          "remaining"
        ],
        "title": "CloneProgressOut"
      },
      "DatasetCloneProgressOut": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "data_status": {
            "type": "string",
            "maxLength": 14,
            "title": "Data Status",
            "description": "INIT: init\u003Cbr/\u003EREADY: ready\u003Cbr/\u003ECLONING_TARGET: cloning_target\u003Cbr/\u003ECLONING_SOURCE: cloning_source\u003Cbr/\u003ECLONING_FAILED: cloning_failed\u003Cbr/\u003EFROZEN: frozen",
            "default": "init"
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description",
            "nullable": true
          },
          "metadata": {
            "title": "Metadata"
          },
          "url_rules": {
            "title": "Url Rules"
          },
          "robots": {
            "items": {
              "$ref": "#/components/schemas/mygpt.models.Robot.leaf"
            },
            "type": "array",
            "title": "Robots"
          },
          "user_id": {
            "type": "string",
            "maxLength": 100,
            "title": "User Id"
          },
          "clone_progress": {
            "$ref": "#/components/schemas/CloneProgressOut"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "created_at",
          "updated_at",
          "name",
          "robots",
          "user_id"
        ],
        "title": "DatasetOut"
      },
      "DatasetIn": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description",
            "nullable": true
          },
          "url_rules": {
            "title": "Url Rules"
          },
          "embedding_model_name": {
            "type": "string",
            "title": "Embedding Model Name"
          },
          "embedding_dimensions": {
            "type": "integer",
            "exclusiveMaximum": 3072,
            "minimum": 1,
            "title": "Embedding Dimensions"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "name"
        ],
        "title": "DatasetIn"
      },
      "DatasetOut": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "data_status": {
            "type": "string",
            "maxLength": 14,
            "title": "Data Status",
            "description": "INIT: init\u003Cbr/\u003EREADY: ready\u003Cbr/\u003ECLONING_TARGET: cloning_target\u003Cbr/\u003ECLONING_SOURCE: cloning_source\u003Cbr/\u003ECLONING_FAILED: cloning_failed\u003Cbr/\u003EFROZEN: frozen",
            "default": "init"
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description",
            "nullable": true
          },
          "metadata": {
            "title": "Metadata"
          },
          "url_rules": {
            "title": "Url Rules"
          },
          "robots": {
            "items": {
              "$ref": "#/components/schemas/mygpt.models.Robot.leaf"
            },
            "type": "array",
            "title": "Robots"
          },
          "user_id": {
            "type": "string",
            "maxLength": 100,
            "title": "User Id"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "created_at",
          "updated_at",
          "name",
          "robots",
          "user_id"
        ],
        "title": "DatasetOut"
      },
      "DatasourceType": {
        "type": "string",
        "enum": [
          "file",
          "website",
          "sitemap",
          "gitbook",
          "faq",
          "api"
        ],
        "title": "DatasourceType",
        "description": "An enumeration."
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "Page_DatasetCloneProgressOut_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/DatasetCloneProgressOut"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "type": "integer",
            "minimum": 0,
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "minimum": 1,
            "title": "Page"
          },
          "size": {
            "type": "integer",
            "minimum": 1,
            "title": "Size"
          },
          "pages": {
            "type": "integer",
            "minimum": 0,
            "title": "Pages"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "page",
          "size"
        ],
        "title": "Page[DatasetCloneProgressOut]"
      },
      "Page_RobotPageOut_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/RobotPageOut"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "type": "integer",
            "minimum": 0,
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "minimum": 1,
            "title": "Page"
          },
          "size": {
            "type": "integer",
            "minimum": 1,
            "title": "Size"
          },
          "pages": {
            "type": "integer",
            "minimum": 0,
            "title": "Pages"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "page",
          "size"
        ],
        "title": "Page[RobotPageOut]"
      },
      "Page_SessionMessageExpandOut_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/SessionMessageExpandOut"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "type": "integer",
            "minimum": 0,
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "minimum": 1,
            "title": "Page"
          },
          "size": {
            "type": "integer",
            "minimum": 1,
            "title": "Size"
          },
          "pages": {
            "type": "integer",
            "minimum": 0,
            "title": "Pages"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "page",
          "size"
        ],
        "title": "Page[SessionMessageExpandOut]"
      },
      "Page_VectorFileOut_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/VectorFileOut"
            },
            "type": "array",
            "title": "Items"
          },
          "total": {
            "type": "integer",
            "minimum": 0,
            "title": "Total"
          },
          "page": {
            "type": "integer",
            "minimum": 1,
            "title": "Page"
          },
          "size": {
            "type": "integer",
            "minimum": 1,
            "title": "Size"
          },
          "pages": {
            "type": "integer",
            "minimum": 0,
            "title": "Pages"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "page",
          "size"
        ],
        "title": "Page[VectorFileOut]"
      },
      "QuestionIn": {
        "properties": {
          "question": {
            "type": "string",
            "maxLength": 2000,
            "title": "Question"
          },
          "session_id": {
            "type": "string",
            "maxLength": 100,
            "title": "Session Id",
            "description": "Session ID\nIt is recommended to use uuid"
          },
          "message_id": {
            "type": "string",
            "format": "uuid",
            "title": "Message Id"
          },
          "anonymous_username": {
            "type": "string",
            "title": "Anonymous Username",
            "default": ""
          },
          "use_faq": {
            "type": "boolean",
            "title": "Use Faq",
            "default": true
          },
          "max_tokens": {
            "type": "integer",
            "title": "Max Tokens",
            "default": 1250
          },
          "stream": {
            "type": "boolean",
            "title": "Stream",
            "default": false
          },
          "stream_obj": {
            "type": "boolean",
            "title": "Stream Obj",
            "default": false
          },
          "format": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StreamingMessageDataFormat"
              }
            ],
            "default": "PLAIN_TEXT"
          },
          "with_source": {
            "type": "boolean",
            "title": "With Source",
            "default": false
          },
          "with_images": {
            "type": "boolean",
            "title": "With Images"
          },
          "debug_with_messages": {
            "type": "boolean",
            "title": "Debug With Messages",
            "description": "Debug only, use `debug_with_messages: true, stream: false` to get prompt messages",
            "default": false
          },
          "recommend_faq_id": {
            "type": "string",
            "format": "uuid",
            "title": "Recommend Faq Id"
          },
          "created_by": {
            "type": "string",
            "title": "Created By",
            "default": ""
          },
          "page_info": {
            "type": "object",
            "title": "Page Info"
          },
          "is_test": {
            "type": "boolean",
            "title": "Is Test",
            "default": false
          },
          "metadata": {
            "items": {
              "$ref": "#/components/schemas/QuestionMetadata"
            },
            "type": "array",
            "title": "Metadata",
            "default": []
          },
          "prompt_custom_goal": {
            "type": "string",
            "maxLength": 200,
            "title": "Prompt Custom Goal",
            "description": "custom goal for prompt",
            "default": ""
          }
        },
        "type": "object",
        "required": [
          "question",
          "session_id"
        ],
        "title": "QuestionIn"
      },
      "QuestionMetadata": {
        "properties": {
          "key": {
            "type": "string",
            "title": "Key"
          },
          "value": {
            "type": "string",
            "title": "Value"
          },
          "type": {
            "type": "string",
            "title": "Type"
          }
        },
        "type": "object",
        "required": [
          "key"
        ],
        "title": "QuestionMetadata"
      },
      "QuestionOut": {
        "properties": {
          "answer": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "object"
              },
              {
                "items": {

                },
                "type": "array"
              }
            ],
            "title": "Answer"
          },
          "messages": {
            "items": {

            },
            "type": "array",
            "title": "Messages"
          }
        },
        "type": "object",
        "title": "QuestionOut"
      },
      "Recommend": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "language": {
            "type": "string",
            "title": "Language"
          }
        },
        "type": "object",
        "title": "Recommend"
      },
      "RecommendIn": {
        "properties": {
          "recommend_list": {
            "items": {
              "$ref": "#/components/schemas/Recommend"
            },
            "type": "array",
            "title": "Recommend List"
          }
        },
        "type": "object",
        "required": [
          "recommend_list"
        ],
        "title": "RecommendIn"
      },
      "RobotOut": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 100,
            "title": "Name"
          },
          "discrible": {
            "type": "string",
            "title": "Discrible",
            "nullable": true
          },
          "subject_name": {
            "type": "string",
            "title": "Subject Name",
            "nullable": true
          },
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "nullable": true
          },
          "ai_type": {
            "type": "string",
            "maxLength": 20,
            "title": "Ai Type",
            "description": "DEFAULT: default\u003Cbr/\u003EDEMO: demo\u003Cbr/\u003EPUBLIC: public\u003Cbr/\u003EPRIVATE: private\u003Cbr/\u003ETRENDING: trending",
            "default": "private"
          },
          "ai_model": {
            "type": "string",
            "maxLength": 20,
            "title": "Ai Model",
            "description": "FILE: file\u003Cbr/\u003EWEBSITE: website\u003Cbr/\u003EDIGITAL_HUMAN: digital_human",
            "default": "file"
          },
          "ai_status": {
            "type": "string",
            "maxLength": 20,
            "title": "Ai Status",
            "description": "INIT: init\u003Cbr/\u003EREADY: ready\u003Cbr/\u003EFROZEN: frozen",
            "default": "ready"
          },
          "user": {
            "allOf": [
              {
                "$ref": "#/components/schemas/mygpt.models.User.leaf"
              }
            ],
            "title": "User"
          },
          "datasets": {
            "items": {
              "$ref": "#/components/schemas/mygpt.models.Dataset.leaf"
            },
            "type": "array",
            "title": "Datasets"
          },
          "questions": {
            "items": {
              "$ref": "#/components/schemas/mygpt.models.Question.leaf"
            },
            "type": "array",
            "title": "Questions"
          },
          "file_count": {
            "type": "integer",
            "title": "File Count"
          },
          "faq_count": {
            "type": "integer",
            "title": "Faq Count"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "created_at",
          "name",
          "user",
          "datasets",
          "questions",
          "file_count",
          "faq_count"
        ],
        "title": "RobotOut"
      },
      "RobotPageOut": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 100,
            "title": "Name"
          },
          "discrible": {
            "type": "string",
            "title": "Discrible",
            "nullable": true
          },
          "subject_name": {
            "type": "string",
            "title": "Subject Name",
            "nullable": true
          },
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "nullable": true
          },
          "ai_type": {
            "type": "string",
            "maxLength": 20,
            "title": "Ai Type",
            "description": "DEFAULT: default\u003Cbr/\u003EDEMO: demo\u003Cbr/\u003EPUBLIC: public\u003Cbr/\u003EPRIVATE: private\u003Cbr/\u003ETRENDING: trending",
            "default": "private"
          },
          "ai_model": {
            "type": "string",
            "maxLength": 20,
            "title": "Ai Model",
            "description": "FILE: file\u003Cbr/\u003EWEBSITE: website\u003Cbr/\u003EDIGITAL_HUMAN: digital_human",
            "default": "file"
          },
          "ai_status": {
            "type": "string",
            "maxLength": 20,
            "title": "Ai Status",
            "description": "INIT: init\u003Cbr/\u003EREADY: ready\u003Cbr/\u003EFROZEN: frozen",
            "default": "ready"
          },
          "user": {
            "allOf": [
              {
                "$ref": "#/components/schemas/mygpt.models.User.leaf"
              }
            ],
            "title": "User"
          },
          "datasets": {
            "items": {
              "$ref": "#/components/schemas/mygpt.models.Dataset.leaf"
            },
            "type": "array",
            "title": "Datasets"
          },
          "file_count": {
            "type": "integer",
            "title": "File Count"
          },
          "faq_count": {
            "type": "integer",
            "title": "Faq Count"
          },
          "all_file_count": {
            "type": "integer",
            "title": "All File Count"
          },
          "all_faq_count": {
            "type": "integer",
            "title": "All Faq Count"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "created_at",
          "name",
          "user",
          "datasets",
          "file_count",
          "faq_count",
          "all_file_count",
          "all_faq_count"
        ],
        "title": "RobotPageOut"
      },
      "SessionMessageExpandOut": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "anonymous_username": {
            "type": "string",
            "maxLength": 100,
            "title": "Anonymous Username",
            "nullable": true
          },
          "question": {
            "type": "string",
            "title": "Question"
          },
          "answer": {
            "type": "string",
            "title": "Answer",
            "nullable": true
          },
          "feedback_content": {
            "type": "string",
            "title": "Feedback Content",
            "nullable": true
          },
          "total_tokens": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "title": "Total Tokens"
          },
          "rating": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "title": "Rating",
            "default": 0,
            "nullable": true
          },
          "reference_list": {
            "title": "Reference List"
          },
          "reference_indexes": {
            "title": "Reference Indexes"
          },
          "history_conversation_count": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "title": "History Conversation Count",
            "nullable": true
          },
          "is_test": {
            "type": "boolean",
            "title": "Is Test",
            "default": false
          },
          "faq_id": {
            "type": "string",
            "format": "uuid",
            "title": "Faq Id",
            "nullable": true
          },
          "comes_from": {
            "type": "string",
            "maxLength": 100,
            "title": "Comes From",
            "nullable": true
          },
          "first_response_time": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "title": "First Response Time",
            "nullable": true
          },
          "llm_can_answer": {
            "type": "boolean",
            "title": "Llm Can Answer",
            "nullable": true
          },
          "title": {
            "type": "string",
            "maxLength": 1024,
            "title": "Title",
            "nullable": true
          },
          "url": {
            "type": "string",
            "maxLength": 1024,
            "title": "Url",
            "nullable": true
          },
          "model": {
            "type": "string",
            "maxLength": 100,
            "title": "Model",
            "description": "TEXT_EMBEDDING_ADA_002: text-embedding-ada-002\u003Cbr/\u003ETEXT_EMBEDDING_3_SMALL: text-embedding-3-small\u003Cbr/\u003ETEXT_EMBEDDING_3_LARGE: text-embedding-3-large\u003Cbr/\u003EGPT_4: gpt-4\u003Cbr/\u003EGPT_35_TURBO: gpt-3.5-turbo\u003Cbr/\u003EGPT_4_TURBO_PREVIEW: gpt-4-turbo-preview\u003Cbr/\u003EGPT_35_TURBO_16K: gpt-3.5-turbo-1106\u003Cbr/\u003EGPT_4_1106_PREVIEW: gpt-4-1106-preview\u003Cbr/\u003EGPT_4_OMNI: gpt-4o\u003Cbr/\u003ECLAUDE_35_SONNET: claude-3-5-sonnet-20240620",
            "nullable": true
          },
          "question_metadata": {
            "title": "Question Metadata"
          },
          "status": {
            "type": "string",
            "maxLength": 100,
            "title": "Status",
            "description": "PENDING: pending\u003Cbr/\u003EFINISHED: finished",
            "default": "finished"
          },
          "is_correct": {
            "type": "boolean",
            "title": "Is Correct",
            "default": false,
            "nullable": true
          },
          "transfer_to_human": {
            "type": "boolean",
            "title": "Transfer To Human",
            "default": false
          },
          "session_id": {
            "type": "string",
            "maxLength": 100,
            "title": "Session Id"
          },
          "user_id": {
            "type": "string",
            "maxLength": 100,
            "title": "User Id",
            "nullable": true
          },
          "session_message_metadata": {
            "items": {

            },
            "type": "array",
            "title": "Session Message Metadata",
            "default": []
          },
          "default_dataset_id": {
            "type": "string",
            "title": "Default Dataset Id"
          },
          "citation": {
            "items": {

            },
            "type": "array",
            "title": "Citation"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "created_at",
          "question",
          "total_tokens",
          "session_id"
        ],
        "title": "SessionMessageOut"
      },
      "StreamingMessageDataFormat": {
        "type": "string",
        "enum": [
          "PLAIN_TEXT",
          "JSON_AST"
        ],
        "title": "StreamingMessageDataFormat",
        "description": "An enumeration."
      },
      "UpdateRobotIn": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "discrible": {
            "type": "string",
            "title": "Discrible"
          },
          "ai_type": {
            "$ref": "#/components/schemas/AIType"
          },
          "prompt": {
            "type": "string",
            "title": "Prompt"
          },
          "subject_name": {
            "type": "string",
            "title": "Subject Name"
          }
        },
        "type": "object",
        "required": [
          "subject_name"
        ],
        "title": "UpdateRobotIn"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "VectorFileIn": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "title": {
            "type": "string",
            "maxLength": 2048,
            "title": "Title",
            "nullable": true
          },
          "filename": {
            "type": "string",
            "maxLength": 2048,
            "title": "Filename",
            "nullable": true
          },
          "file_status": {
            "type": "string",
            "maxLength": 20,
            "title": "File Status",
            "description": "CRAWLED: crawled\u003Cbr/\u003EPROCESS: process\u003Cbr/\u003ECOMPLETE: complete\u003Cbr/\u003EFAIL: fail\u003Cbr/\u003EExceeded: exceeded\u003Cbr/\u003EDELETED: deleted\u003Cbr/\u003EREADY: ready",
            "default": "ready"
          },
          "file_lang": {
            "type": "string",
            "maxLength": 50,
            "title": "File Lang",
            "nullable": true
          },
          "file_size": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "title": "File Size",
            "default": 0
          },
          "token_count": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "title": "Token Count",
            "default": 0
          },
          "characters_count": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "title": "Characters Count",
            "default": 0
          },
          "failed_reason": {
            "type": "string",
            "title": "Failed Reason",
            "nullable": true
          },
          "resources": {
            "title": "Resources"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "VectorFileIn"
      },
      "VectorFileOut": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "title": {
            "type": "string",
            "maxLength": 2048,
            "title": "Title",
            "nullable": true
          },
          "filename": {
            "type": "string",
            "maxLength": 2048,
            "title": "Filename",
            "nullable": true
          },
          "file_type": {
            "type": "string",
            "maxLength": 20,
            "title": "File Type",
            "description": "UPLOAD: upload\u003Cbr/\u003ECONVERT: convert\u003Cbr/\u003EHTML: html\u003Cbr/\u003EHTML_PDF: html_pdf\u003Cbr/\u003ESITEMAP: sitemap\u003Cbr/\u003EGITBOOK: gitbook\u003Cbr/\u003EFAQ: faq\u003Cbr/\u003EFAQ_QUESTION: faq_question"
          },
          "file_status": {
            "type": "string",
            "maxLength": 20,
            "title": "File Status",
            "description": "CRAWLED: crawled\u003Cbr/\u003EPROCESS: process\u003Cbr/\u003ECOMPLETE: complete\u003Cbr/\u003EFAIL: fail\u003Cbr/\u003EExceeded: exceeded\u003Cbr/\u003EDELETED: deleted\u003Cbr/\u003EREADY: ready",
            "default": "ready"
          },
          "file_size": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "title": "File Size",
            "default": 0
          },
          "token_count": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "title": "Token Count",
            "default": 0
          },
          "characters_count": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "title": "Characters Count",
            "default": 0
          },
          "failed_reason": {
            "type": "string",
            "title": "Failed Reason",
            "nullable": true
          },
          "index_ids": {
            "title": "Index Ids"
          },
          "resources": {
            "title": "Resources"
          },
          "content_hash": {
            "type": "string",
            "maxLength": 255,
            "title": "Content Hash",
            "nullable": true
          },
          "dataset_id": {
            "type": "string",
            "format": "uuid",
            "title": "Dataset Id",
            "nullable": true
          },
          "tokens": {
            "type": "integer",
            "title": "Tokens"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "created_at",
          "updated_at",
          "file_type",
          "tokens"
        ],
        "title": "VectorFileOut"
      },
      "VectorFileStatus": {
        "type": "string",
        "enum": [
          "crawled",
          "process",
          "complete",
          "fail",
          "exceeded",
          "deleted",
          "ready"
        ],
        "title": "VectorFileStatus",
        "description": "An enumeration."
      },
      "mygpt.models.Dataset.leaf": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "readOnly": true
          },
          "data_status": {
            "type": "string",
            "maxLength": 14,
            "title": "Data Status",
            "description": "INIT: init\u003Cbr/\u003EREADY: ready\u003Cbr/\u003ECLONING_TARGET: cloning_target\u003Cbr/\u003ECLONING_SOURCE: cloning_source\u003Cbr/\u003ECLONING_FAILED: cloning_failed\u003Cbr/\u003EFROZEN: frozen",
            "default": "init"
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description",
            "nullable": true
          },
          "metadata": {
            "title": "Metadata"
          },
          "url_rules": {
            "title": "Url Rules"
          },
          "user_id": {
            "type": "string",
            "maxLength": 100,
            "title": "User Id"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "created_at",
          "updated_at",
          "name",
          "user_id"
        ],
        "title": "Dataset"
      },
      "mygpt.models.Question.leaf": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "question": {
            "type": "string",
            "title": "Question"
          },
          "question_type": {
            "type": "string",
            "maxLength": 40,
            "title": "Question Type",
            "description": "Generator: generator",
            "default": "generator"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "question"
        ],
        "title": "Question"
      },
      "mygpt.models.Robot.leaf": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 100,
            "title": "Name"
          },
          "discrible": {
            "type": "string",
            "title": "Discrible",
            "nullable": true
          },
          "subject_name": {
            "type": "string",
            "title": "Subject Name",
            "nullable": true
          },
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "nullable": true
          },
          "ai_type": {
            "type": "string",
            "maxLength": 20,
            "title": "Ai Type",
            "description": "DEFAULT: default\u003Cbr/\u003EDEMO: demo\u003Cbr/\u003EPUBLIC: public\u003Cbr/\u003EPRIVATE: private\u003Cbr/\u003ETRENDING: trending",
            "default": "private"
          },
          "ai_model": {
            "type": "string",
            "maxLength": 20,
            "title": "Ai Model",
            "description": "FILE: file\u003Cbr/\u003EWEBSITE: website\u003Cbr/\u003EDIGITAL_HUMAN: digital_human",
            "default": "file"
          },
          "ai_status": {
            "type": "string",
            "maxLength": 20,
            "title": "Ai Status",
            "description": "INIT: init\u003Cbr/\u003EREADY: ready\u003Cbr/\u003EFROZEN: frozen",
            "default": "ready"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "created_at",
          "name"
        ],
        "title": "Robot"
      },
      "mygpt.models.User.leaf": {
        "properties": {
          "user_id": {
            "type": "string",
            "maxLength": 100,
            "title": "User Id"
          },
          "email": {
            "type": "string",
            "maxLength": 100,
            "title": "Email"
          },
          "name": {
            "type": "string",
            "maxLength": 100,
            "title": "Name"
          },
          "salt": {
            "type": "string",
            "maxLength": 64,
            "title": "Salt",
            "nullable": true
          },
          "picture": {
            "type": "string",
            "maxLength": 1500,
            "title": "Picture",
            "nullable": true
          },
          "locale": {
            "type": "string",
            "maxLength": 10,
            "title": "Locale",
            "nullable": true
          },
          "corporate": {
            "type": "boolean",
            "title": "Corporate",
            "default": false
          },
          "is_independent": {
            "type": "boolean",
            "title": "Is Independent",
            "default": false
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "user_id",
          "email",
          "name"
        ],
        "title": "User"
      }
    },
    "securitySchemes": {
      "HTTPBearer": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}
